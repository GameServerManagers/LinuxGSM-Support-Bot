//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SupportBot {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SupportBot.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ark Clustering
        ///&lt;https://docs.linuxgsm.com/game-servers/ark-survival-evolved#clusters&gt;.
        /// </summary>
        internal static string ArkClusters {
            get {
                return ResourceManager.GetString("ArkClusters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Cron/CronJob**
        ///https://docs.linuxgsm.com/configuration/cronjobs.
        /// </summary>
        internal static string Cronjob {
            get {
                return ResourceManager.GetString("Cronjob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CWorkThreadPool
        ///These errors can be safely ignored..
        /// </summary>
        internal static string CWorkThreadPool {
            get {
                return ResourceManager.GetString("CWorkThreadPool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Logical Volume Manager (LVM)**
        ///It looks like you are using LVM, if this is a virtual machine you probably need to expand the drive as most installations initially only assign a small amount.
        ///
        ///The easy way of doing this is to get the name of the volume using `sudo lvs`
        ///
        ///You will see something like this:
        ///```
        /// LV        VG          Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
        /// db        LVMVolGroup -wi-ao----  20.00g
        /// projects  LVMVolGroup -wi-ao----  10.00g
        /// workspace LVM [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LvmPartitions {
            get {
                return ResourceManager.GetString("LvmPartitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Rust Custom Map**
        ///
        ///1. Upload your custom `.map` file to a web accessible server (Or setup apache/nginx on your server and use that)
        ///
        ///2. Once uploaded, copy the download link as you will need to add this to the rust config. 
        ///
        ///3. Edit your servers config file (Example: `/home/rustserver/lgsm/config-lgsm/rustserver/rustserver.cfg`)
        ///
        ///4. Comment out  `params=&quot;...` as we will replace it with:
        ///```BASH
        ///parms=&quot;-batchmode +server.ip ${ip} +server.port ${port} +server.tickrate ${tickrate} +server.hostname  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RustCustomMap {
            get {
                return ResourceManager.GetString("RustCustomMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying any updates to triggers....
        /// </summary>
        internal static string SelfUpdate {
            get {
                return ResourceManager.GetString("SelfUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only WSL2 is supported by LinuxGSM, so you need win 10 build 2004 or newer
        ///You also need to ensure you have Version 2 or Newer of WSL
        ///&lt;https://docs.linuxgsm.com/support/faq#will-linuxgsm-run-on-linux-for-windows&gt;.
        /// </summary>
        internal static string Wsl {
            get {
                return ResourceManager.GetString("Wsl", resourceCulture);
            }
        }
    }
}
